<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<bean
		id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.99.100:3306/lecture" />
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="deptDao" class="com.bit.sts05.model.DeptDaoImpl">
		<constructor-arg ref="jdbcTemplate"></constructor-arg>
	</bean>
	
	<bean id="deptService" class="com.bit.sts05.service.DeptServiceImpl">
		<property name="deptDao" ref="deptDao" />
	</bean>
		
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.bit.sts05.service.DeptService.*(..))" id="listService" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="listService"/>
	</aop:config>
	
	
<!-- 	<bean  -->
<!-- 		id="beforeAdvice" -->
<!-- 		class="com.bit.sts05.utils.BitBeforeAdvice" -->
<!-- 	></bean> -->
	
	
<!-- 	<bean id="afterAdvice" class="com.bit.sts05.utils.DaoAdvice"></bean> -->
	
<!-- 	<bean id="aroundAdvice" class="com.bit.sts05.utils.AroundAdvice"></bean> -->
	
	
	
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut expression="execution(* com.bit.sts05.model.DeptDao.findAll(..))" id="cut1" /> -->
<!-- 		<aop:pointcut expression="execution(* com.bit.sts05.model.DeptDao.findAll(..))" id="cut2"/> -->
<!-- 		<aop:aspect ref="afterAdvice"> -->
<!-- 			<aop:after-returning method="afterReturning" pointcut-ref="cut1" returning="rv"/> -->
<!-- 		</aop:aspect> -->
<!-- 		<aop:aspect ref="beforeAdvice"> -->
<!-- 			<aop:before method="before" pointcut-ref="cut2" /> -->
<!-- 		</aop:aspect> -->
<!-- 		<aop:aspect ref="afterAdvice"> -->
<!-- 			<aop:after-throwing method="afterThrowingTargetMethod" pointcut-ref="cut1" throwing="ex"/>  -->
<!-- 		</aop:aspect> -->
<!-- 			<aop:aspect ref="afterAdvice"> -->
<!-- 				<aop:after method="afterTargetMethod" pointcut-ref="cut1"/> -->
<!-- 			</aop:aspect> -->
<!-- 			<aop:aspect ref="aroundAdvice"> -->
<!-- 				<aop:around method="aroundTargetMethod" pointcut-ref="cut2" /> -->
<!-- 			</aop:aspect> -->
<!-- 	</aop:config> -->
<!-- 	<aop:aspectj-autoproxy/>  -->
</beans>
